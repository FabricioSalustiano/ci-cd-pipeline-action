name: CI-CD Homologation

on:
  pull_request:
    types: [opened, synchronize, edited, labeled]

jobs:
  check-homolog:
    runs-on: ubuntu-latest
    outputs:
      homolog: ${{ steps.set-homolog.outputs.homolog }}
    steps:
      - name: Verificar checkbox de homologação
        id: set-homolog
        run: |
          if echo "${{ github.event.pull_request.body }}" | grep -iq "\- \[x\] Enviar para homologação?"; then
            echo "homolog=true" >> $GITHUB_OUTPUT
          else
            echo "homolog=false" >> $GITHUB_OUTPUT
          fi

  validate-client:
    needs: check-homolog
    if: ${{ needs.check-homolog.outputs.homolog == 'true' && contains(github.event.pull_request.labels.*.name, '@flux/client') }}
    uses: ./.github/workflows/ci-cd.client.yml

  validate-api:
    needs: check-homolog
    if: ${{ needs.check-homolog.outputs.homolog == 'true' && contains(github.event.pull_request.labels.*.name, '@flux/api') }}
    uses: ./.github/workflows/ci-cd.api.yml

  publish-homolog:
    needs: [validate-client, validate-api]
    if: ${{ needs.check-homolog.outputs.homolog == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configurar Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Rebase na master
        run: |
          git fetch origin master
          git checkout ${{ github.head_ref }}
          git rebase origin/master
      - name: Push para a branch PR
        run: |
          git push origin ${{ github.head_ref }} --force-with-lease
      - name: Publicar em homolog
        run: |
          git checkout master
          git pull origin master
          git branch -D homolog || true
          git checkout -b homolog
          git cherry-pick origin/${{ github.head_ref }}
          git push origin homolog -f
